"zh-CN" != lang && (document.title = i18n[lang].marquee + i18n[lang].titleSuffix, document.getElementsByClassName("mui-title")[0].innerText = i18n[lang].marquee, document.getElementsByTagName("input")[0].placeholder = i18n[lang].enterText, document.getElementById("backgroundColorLabel").innerText = i18n[lang].backgroundColor.split(" ")[0], document.getElementById("textColorLabel").innerText = i18n[lang].textColor.split(" ")[0], document.getElementById("speedLabel").innerText = i18n[lang].speed, document.getElementsByTagName("button")[0].innerText = i18n[lang].start); function start() { const a = document.createElement("div"), b = document.createElement("div"), c = document.getElementsByTagName("input")[0].value; if (a.classList.add("full-screen"), a.style.backgroundColor = document.getElementById("backgroundColor").value, a.style.color = document.getElementById("textColor").value, a.oncontextmenu = () => (clearInterval(window.intervalId), b.style.left = "calc(50% - " + b.offsetWidth / 2 + "px)", b.style.top = "calc(50% - " + b.offsetHeight / 2 + "px)", b.style.transform = 450 < innerWidth ? "none" : "rotate(90deg)", !1), a.onclick = stop, b.innerText = c, a.appendChild(b), document.body.appendChild(a), !c) { const a = () => { const a = new Date; b.innerText = addZero(a.getHours(), 2) + ":" + addZero(a.getMinutes(), 2) + ":" + addZero(a.getSeconds(), 2) }; window.clock = setInterval(a, 1e3), a() } !isApp && a.requestFullscreen && a.requestFullscreen(), window.intervalId = setInterval(() => { b.style.left = b.offsetLeft < -b.offsetWidth ? "" : b.offsetLeft - 5 + "px" }, 1e3 / document.getElementById("speed").value), hist.add(document.getElementsByTagName("input")[0].value) } function stop() { clearInterval(window.clock), clearInterval(window.intervalId), rmElement(document.getElementsByClassName("full-screen")[0]) } document.onfullscreenchange = a => { (document.fullscreenElement || document.webkitFullscreenElement) !== a.target && stop() }, !("onfullscreenchange" in Element.prototype) && "onwebkitfullscreenchange" in Element.prototype && (document.onwebkitfullscreenchange = document.onfullscreenchange), document.getElementsByTagName("input")[0].onkeydown = a => { 13 == a.keyCode && start() }, document.getElementsByTagName("button")[0].onclick = start, isMobile || document.getElementsByTagName("input")[0].focus(), initTextHist(), addEventListener("load", () => { loadWaves() });